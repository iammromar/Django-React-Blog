{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Omar\\\\Desktop\\\\Bloggy-master\\\\frontend\\\\src\\\\Theme.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nconst getTheme = () => {\n  const theme = localStorage.getItem(\"theme\");\n  // Default theme is taken as dark-theme\n  if (!theme) {\n    localStorage.setItem(\"theme\", \"dark-theme\");\n    return \"dark-theme\";\n  } else {\n    return theme;\n  }\n};\nconst ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [theme, setTheme] = useState(getTheme);\n  function toggleTheme() {\n    if (theme === \"dark-theme\") {\n      setTheme(\"light-theme\");\n    } else {\n      setTheme(\"dark-theme\");\n    }\n  }\n  ;\n  useEffect(() => {\n    const refreshTheme = () => {\n      localStorage.setItem(\"theme\", theme);\n    };\n    refreshTheme();\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      setTheme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"hp/y3AqVVR8NK36lmBgWAXiPlec=\");\n_c = ThemeProvider;\nexport { ThemeContext, ThemeProvider };\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","useEffect","createContext","useState","jsxDEV","_jsxDEV","ThemeContext","getTheme","theme","localStorage","getItem","setItem","ThemeProvider","children","_s","setTheme","toggleTheme","refreshTheme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Omar/Desktop/Bloggy-master/frontend/src/Theme.js"],"sourcesContent":["import React, { useEffect, createContext, useState } from \"react\";\r\n\r\nconst ThemeContext = createContext();\r\n\r\nconst getTheme = () => {\r\n  const theme = localStorage.getItem(\"theme\");\r\n  // Default theme is taken as dark-theme\r\n  if (!theme) {\r\n    localStorage.setItem(\"theme\", \"dark-theme\");\r\n    return \"dark-theme\";\r\n  } else {\r\n    return theme;\r\n  }\r\n};\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const [theme, setTheme] = useState(getTheme);\r\n\r\n  function toggleTheme() {\r\n    if (theme === \"dark-theme\") {\r\n      setTheme(\"light-theme\");\r\n    } else {\r\n      setTheme(\"dark-theme\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const refreshTheme = () => {\r\n      localStorage.setItem(\"theme\", theme);\r\n    };\r\n\r\n    refreshTheme();\r\n  }, [theme]);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        theme,\r\n        setTheme,\r\n        toggleTheme,\r\n      }}\r\n    >\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport { ThemeContext, ThemeProvider };"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,YAAY,gBAAGJ,aAAa,CAAC,CAAC;AAEpC,MAAMK,QAAQ,GAAGA,CAAA,KAAM;EACrB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C;EACA,IAAI,CAACF,KAAK,EAAE;IACVC,YAAY,CAACE,OAAO,CAAC,OAAO,EAAE,YAAY,CAAC;IAC3C,OAAO,YAAY;EACrB,CAAC,MAAM;IACL,OAAOH,KAAK;EACd;AACF,CAAC;AAED,MAAMI,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACN,KAAK,EAAEO,QAAQ,CAAC,GAAGZ,QAAQ,CAACI,QAAQ,CAAC;EAE5C,SAASS,WAAWA,CAAA,EAAG;IACrB,IAAIR,KAAK,KAAK,YAAY,EAAE;MAC1BO,QAAQ,CAAC,aAAa,CAAC;IACzB,CAAC,MAAM;MACLA,QAAQ,CAAC,YAAY,CAAC;IACxB;EACF;EAAC;EAEDd,SAAS,CAAC,MAAM;IACd,MAAMgB,YAAY,GAAGA,CAAA,KAAM;MACzBR,YAAY,CAACE,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC;IACtC,CAAC;IAEDS,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACT,KAAK,CAAC,CAAC;EAEX,oBACEH,OAAA,CAACC,YAAY,CAACY,QAAQ;IACpBC,KAAK,EAAE;MACLX,KAAK;MACLO,QAAQ;MACRC;IACF,CAAE;IAAAH,QAAA,EAEDA;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACT,EAAA,CA9BIF,aAAa;AAAAY,EAAA,GAAbZ,aAAa;AAgCnB,SAASN,YAAY,EAAEM,aAAa;AAAG,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}