{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Omar\\\\Desktop\\\\Bloggy-master\\\\frontend\\\\src\\\\components\\\\DarkMode.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DarkModeToggle = () => {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const toggleDarkMode = () => {\n    const newMode = !isDarkMode;\n    setIsDarkMode(newMode);\n    localStorage.setItem('darkMode', newMode ? 'dark' : 'light');\n  };\n  useEffect(() => {\n    const initialDarkMode = localStorage.getItem('darkMode') === 'dark';\n    setIsDarkMode(initialDarkMode);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dark-mode-toggle ${isDarkMode ? 'dark' : 'light'}`,\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleDarkMode,\n      children: isDarkMode ? 'Light Mode' : 'Dark Mode'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(DarkModeToggle, \"bUs4CHDjU8AH+ZZYt8wlh4bHppI=\");\n_c = DarkModeToggle;\nexport default DarkModeToggle;\nvar _c;\n$RefreshReg$(_c, \"DarkModeToggle\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DarkModeToggle","_s","isDarkMode","setIsDarkMode","toggleDarkMode","newMode","localStorage","setItem","initialDarkMode","getItem","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Omar/Desktop/Bloggy-master/frontend/src/components/DarkMode.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst DarkModeToggle = () => {\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n  const toggleDarkMode = () => {\r\n    const newMode = !isDarkMode;\r\n    setIsDarkMode(newMode);\r\n    localStorage.setItem('darkMode', newMode ? 'dark' : 'light');\r\n  };\r\n\r\n  useEffect(() => {\r\n    const initialDarkMode = localStorage.getItem('darkMode') === 'dark';\r\n    setIsDarkMode(initialDarkMode);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`dark-mode-toggle ${isDarkMode ? 'dark' : 'light'}`}>\r\n      <button onClick={toggleDarkMode}>\r\n        {isDarkMode ? 'Light Mode' : 'Dark Mode'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DarkModeToggle;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMQ,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,OAAO,GAAG,CAACH,UAAU;IAC3BC,aAAa,CAACE,OAAO,CAAC;IACtBC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEF,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;EAC9D,CAAC;EAEDR,SAAS,CAAC,MAAM;IACd,MAAMW,eAAe,GAAGF,YAAY,CAACG,OAAO,CAAC,UAAU,CAAC,KAAK,MAAM;IACnEN,aAAa,CAACK,eAAe,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAKW,SAAS,EAAG,oBAAmBR,UAAU,GAAG,MAAM,GAAG,OAAQ,EAAE;IAAAS,QAAA,eAClEZ,OAAA;MAAQa,OAAO,EAAER,cAAe;MAAAO,QAAA,EAC7BT,UAAU,GAAG,YAAY,GAAG;IAAW;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACf,EAAA,CArBID,cAAc;AAAAiB,EAAA,GAAdjB,cAAc;AAuBpB,eAAeA,cAAc;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}