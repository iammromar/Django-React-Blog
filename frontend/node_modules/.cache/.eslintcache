[{"C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\index.js":"1","C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\App.js":"2","C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\pages\\Articles.js":"3","C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\pages\\Page404.js":"4","C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\pages\\Category.js":"5","C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\pages\\Profile.js":"6","C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\pages\\Index.js":"7","C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\pages\\Article.js":"8","C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\components\\Navbar.js":"9","C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\components\\ToTop.js":"10","C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\components\\Footer.js":"11","C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\components\\LoadingPostCard.js":"12","C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\components\\PostCard.js":"13","C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\components\\RightSide.js":"14","C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\components\\LoadingComment.js":"15","C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\components\\LoadingProfile.js":"16","C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\components\\Message.js":"17","C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\components\\PostCard2.js":"18","C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\components\\LoadingPostCard2.js":"19","C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\components\\LoadingArticle.js":"20","C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\components\\AddComment.js":"21","C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\components\\LoginRegister.js":"22","C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\components\\AdminActions.js":"23","C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\components\\DarkMode.js":"24"},{"size":198,"mtime":1697993429047,"results":"25","hashOfConfig":"26"},{"size":1109,"mtime":1699279276823,"results":"27","hashOfConfig":"26"},{"size":3524,"mtime":1696853102583,"results":"28","hashOfConfig":"26"},{"size":410,"mtime":1696853231428,"results":"29","hashOfConfig":"26"},{"size":2587,"mtime":1696532391000,"results":"30","hashOfConfig":"26"},{"size":11099,"mtime":1696853367518,"results":"31","hashOfConfig":"26"},{"size":4277,"mtime":1700389967353,"results":"32","hashOfConfig":"26"},{"size":10213,"mtime":1700388838550,"results":"33","hashOfConfig":"26"},{"size":10425,"mtime":1700476864237,"results":"34","hashOfConfig":"26"},{"size":156,"mtime":1700389980819,"results":"35","hashOfConfig":"26"},{"size":285,"mtime":1699289358903,"results":"36","hashOfConfig":"26"},{"size":502,"mtime":1696532391000,"results":"37","hashOfConfig":"26"},{"size":1828,"mtime":1699289327544,"results":"38","hashOfConfig":"26"},{"size":4866,"mtime":1700387749509,"results":"39","hashOfConfig":"26"},{"size":438,"mtime":1696532391000,"results":"40","hashOfConfig":"26"},{"size":547,"mtime":1696532391000,"results":"41","hashOfConfig":"26"},{"size":1039,"mtime":1696532391000,"results":"42","hashOfConfig":"26"},{"size":1087,"mtime":1700387153359,"results":"43","hashOfConfig":"26"},{"size":713,"mtime":1696532391000,"results":"44","hashOfConfig":"26"},{"size":1218,"mtime":1696532391000,"results":"45","hashOfConfig":"26"},{"size":3105,"mtime":1696853441090,"results":"46","hashOfConfig":"26"},{"size":16523,"mtime":1696853789539,"results":"47","hashOfConfig":"26"},{"size":1041,"mtime":1699278990124,"results":"48","hashOfConfig":"26"},{"size":0,"mtime":1699287785242,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"16vui3u",{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"53"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"53"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"53"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"53"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"53"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"53"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"53"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"53"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"53"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"53"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\index.js",[],[],["133"],"C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\App.js",[],[],"C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\pages\\Articles.js",["134"],[],"import PostCard from \"../components/PostCard\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport RightSide from \"../components/RightSide\";\nimport LoadingPostCard from \"../components/LoadingPostCard\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nfunction Articles(props) {\n  const [loading, setLoading] = useState(false);\n  const [posts, setPost] = useState([]);\n  const [x] = useState(0);\n  const [y, setY] = useState(4);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      await fetch(\"http://localhost:8000/api/post_list/\")\n        .then((res) => res.json())\n        .then((data) => setPost(data.sort((a, b) => (a.id < b.id ? 1 : -1))\n        .slice(x, y)));\n      setTimeout(() => {\n        setLoading(false);\n      }, 400);\n    };\n    fetchData();\n    \n  }, [setPost]);\n  const fetchMoreData = async () => {\n    setTimeout(() => {\n      fetch(\"http://localhost:8000/api/post_list/\")\n        .then((res) => res.json())\n        .then((data) => setPost(data.sort((a, b) => (a.id < b.id ? 1 : -1))\n        .slice(0, y * 2)));\n      setY(y * 2);\n    }, 500);\n  };\n  return (\n    <>\n      <main>\n        <div className=\"container\" style={{ marginTop: \"6rem\" }}>\n          <div className=\"col-md-12\">\n            <div className=\"row\">\n              <div className=\"col-md-12 col-sm-12 col-lg-8\">\n                <div className=\"left-side\">\n                  <div className=\"row\">\n                    {\n                      loading ? (\n                        <>\n                          <div className=\"col-md-6\">\n                            <LoadingPostCard />\n                          </div>\n                          <div className=\"col-md-6\">\n                            <LoadingPostCard />\n                          </div>\n                          <div className=\"col-md-6\">\n                            <LoadingPostCard />\n                          </div>\n                          <div className=\"col-md-6\">\n                            <LoadingPostCard />\n                          </div>\n                        </>\n                      ) : (\n                        posts.length !== 0 \n                        ?\n                        (\n                          <InfiniteScroll\n                          style={{ overflow: \"unset\" }}\n                          dataLength={posts.length}\n                          next={fetchMoreData}\n                          hasMore={true}\n                        >\n                          <div className=\"row\">\n                            {posts.map((i) => (\n                              <div key={i.id} className=\"col-md-6\">\n                                <PostCard post={i} />\n                              </div>\n                            ))}\n                          </div>\n                        </InfiniteScroll>\n                        )\n                        :\n                        (\n                          <div className=\"warning-alert mb-3\">\n                            Məqalələr yoxdur.\n                          </div>\n                        )\n                      )\n                    \n                    \n                    \n                  }\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-md-12 col-sm-0 col-lg-4\">\n                <RightSide categories={props.categories} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </>\n  );\n}\nexport default Articles;\n","C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\pages\\Page404.js",[],[],"C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\pages\\Category.js",[],[],"C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\pages\\Profile.js",["135","136"],[],"import { useLocation } from \"react-router\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Message from \"../components/Message\";\nimport LoadingComment from \"../components/LoadingComment\";\nimport LoadingProfile from \"../components/LoadingProfile\";\nimport Cookies from \"js-cookie\";\n\nfunction Profile() {\n  const history = useHistory();\n  const { pathname } = useLocation();\n  const [user, setUser] = useState([]);\n  const [profile, setProfile] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [comment, setComment] = useState([]);\n\n  useEffect(() => {\n    const hi2 = async () => {\n      setLoading(true);\n      await fetch(\"http://localhost:8000/api/user/\", {\n        method: \"GET\",\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n        .then((i) => i.json())\n        .then(\n          (x) => (\n            x[\"detail\"] ? history.push(\"/\") : setUser(x),\n            \n            fetch(\"http://localhost:8000/api/profile_list/\", { method: 'GET' })\n              .then((res) => res.json())\n              .then((data) =>\n                setProfile(data.filter((i) => i.user === x[\"id\"]))\n              ),\n            \n            fetch(\"http://localhost:8000/api/comment_list/\", { method: 'GET' })\n              .then((res) => res.json())\n              .then((data) =>\n                setComment(data.filter((i) => i.user === x[\"id\"]))\n              ),\n            \n            fetch(\"http://localhost:8000/api/post_list/\", { method: 'GET' })\n              .then((res) => res.json())\n              .then((data) =>\n                setPosts(data.filter((i) => i.likes.find((i) => i === x[\"id\"])))\n              )\n          )\n        );\n\n      setTimeout(() => {\n        setLoading(false);\n      }, 500);\n    };\n    hi2();\n  }, [pathname]);\n\n  function messageoptions(e) {\n    const accountdropdownz = document.querySelector(\n      `#opiton${e.target.classList[2]}`\n    );\n    accountdropdownz.classList.toggle(\"d-active\");\n    setTimeout(() => {\n      accountdropdownz.classList.toggle(\"account-dropdown-animate\");\n    }, 20);\n  }\n  function deletethemessage(e) {\n    fetch(\"http://localhost:8000/api/remove_comment/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n\n      body: JSON.stringify({\n        user_id: user[\"id\"],\n        comment_id: e.target.id,\n      }),\n    });\n    \n    document\n      .querySelector(\"#message\" + e.target.id)\n      .classList.add(\"translateX-100\");\n    setTimeout(() => {\n      document.querySelector(\"#message\" + e.target.id).classList.add(\"d-none\");\n    }, 500);\n    \n    const accountdropdownzx = document.querySelectorAll(`.message-option`);\n    \n    var index = 0,\n      length = accountdropdownzx.length;\n\n    for (; index < length; index++) {\n      accountdropdownzx[index].classList.remove(\"d-active\");\n    }\n    document\n      .querySelector(\".bottom-alert\")\n      .classList.toggle(\"open-bottom-alert\");\n    document.querySelector(\".bottom-alert\").classList.remove(\"success\");\n    document.querySelector(\".bottom-alert\").classList.add(\"warning\");\n\n    document.querySelector(\"#bottom-alert-text\").innerHTML =\n      \"Mesaj uğurla silindi\";\n    setTimeout(() => {\n      document\n        .querySelector(\".bottom-alert\")\n        .classList.toggle(\"open-bottom-alert\");\n    }, 2000);\n  }\n\n  function profile_img() {\n    const img_edit_bg = document.querySelector(\".img-editbg\");\n    img_edit_bg.classList.toggle(\"d-active\");\n    const img_edit = document.querySelector(\".img-edit\");\n    img_edit.classList.toggle(\"d-active\");\n    setTimeout(() => {\n      document.querySelector(\".img-edit-form\").classList.toggle(\"scaled\");\n    }, 10);\n  }\n  \n  function saveimg() {\n    fetch(\"http://localhost:8000/api/edit_picture/\", {\n      method: \"POST\",\n      headers: {\n        accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify({\n        user_id: user[\"id\"],\n        img: document.querySelector(\".img-edit-input\").value,\n      }),\n    })\n      .then((i) => i.json())\n      .then((data) => (\n        data['user_id']\n          ?\n          (\n            document.querySelector('.bottom-alert').classList.toggle(\"open-bottom-alert\"),\n            document.querySelector('.bottom-alert').classList.remove(\"success\"),\n            document.querySelector('.bottom-alert').classList.add(\"success\"),\n\n            document.querySelector('#bottom-alert-text').innerHTML = \"Profil şəklinizi uğurla dəyişdiniz\",\n            setTimeout(() => { document.querySelector('.bottom-alert').classList.toggle(\"open-bottom-alert\") }, 2000)\n          )\n          :\n          (\"\")\n      ));\n  }\n  return (\n    <main className=\"profile\">\n      <div className=\"container\" style={{ marginTop: \"6rem\" }}>\n        <div className=\"col-md-12\">\n          <div className=\"row\">\n            <div className=\"col-md-4 mb-3 col-sm-12 col-lg-3\">\n              <div className=\"left-side\">\n                <div className=\"text-center\">\n                  {!loading ? (\n                    profile.map((i) => (\n                      <span key={i.id}>\n                        <div style={{ position: \"relative\" }}>\n                          <img\n                            src={i.profile_pic ? (i.profile_pic) : (\"https://i.ibb.co/J3cGYxy/default-user-image.png\")}\n                            onError={() =>\n                            (document.querySelector(\"#profile-img\").src =\n                              \"https://i.ibb.co/J3cGYxy/default-user-image.png\")\n                            }\n                            alt=\"\"\n                            className=\"profile-img\" id=\"profile-img\"\n                            onClick={profile_img}\n                          />\n                        </div>\n                        <h1 className=\"profile-username\">{user[\"username\"]}</h1>\n                        <hr />\n                        <div className=\"col-md-12\" style={{ padding: '0 1rem' }}>\n                          <div className=\"row\">\n                            <div className=\"col-md-6\">\n                              <span id=\"likespan\">{posts.length}</span>{\" \"}\n                              <i className={`fas fa-heart`}></i>\n                            </div>\n                            <div className=\"col-md-6\">\n                              <span id=\"commentspan\">{comment.length}</span>{\" \"}\n                              <i className=\"fas fa-comments\"></i>\n                            </div>\n                          </div>\n                        </div>\n                        <hr />\n                      </span>\n                    ))\n                  ) : (\n                    <LoadingProfile />\n                  )}\n                </div>\n              </div>\n            </div>\n            <div\n              className=\"col-md-8 col-lg-9 col-sm-12\"\n              style={{ overflowY: \"scroll\", height: \"800px\" }}\n            >\n              <div className=\"right-side\">\n                <h5>Şərhləriniz </h5>\n\n                {!loading ? (\n                  comment.length !== 0 ? (\n                    comment\n                      .sort((a, b) => (a.id < b.id ? 1 : -1))\n                      .map((i) => (\n                        <div key={i.id} style={{ position: \"relative\" }}>\n                          <Message\n                            key={i.id}\n                            date={i.created_date}\n                            user={i.user}\n                            username={i.username}\n                            text={i.text}\n                            id={i.id}\n                          />\n                          <i\n                            onClick={messageoptions}\n                            className={`fas fa-ellipsis-v ${i.id}`}\n                          ></i>\n                          <div id={`opiton${i.id}`} className=\"message-option\">\n                            <span\n                              id={i.id}\n                              style={{ cursor: \"pointer\" }}\n                              onClick={deletethemessage}\n                            >\n                              <i id={i.id} className=\"fas fa-trash-alt\"></i>\n                              <span id={i.id}>Sil</span>\n                            </span>\n                          </div>\n                        </div>\n                      ))\n                  ) : (\n                    <div className=\"mt-3\" id=\"comments-alert\">\n                      <span>Şərh yoxdur</span>\n                    </div>\n                  )\n                ) : (\n                  <>\n                    <LoadingComment />\n                    <LoadingComment />\n                    <LoadingComment />\n                    <LoadingComment />\n                    <LoadingComment />\n                    <LoadingComment />\n                    <LoadingComment />\n                  </>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"img-edit\">\n        <div className=\"container\">\n          <div className=\"img-edit-form\">\n            <h5>Profil şəklini redaktə edin</h5>\n            <hr />\n            <br />\n            <div id=\"login\" className=\"scaled\">\n              <div className=\"alertz danger login-error\">\n                <p className=\"login-error-text\">hi</p>\n              </div>\n              {profile.map((i) => (\n                <div key={i.id} style={{ position: \"relative\" }}>\n                  <input\n                    className=\"input img-edit-input\"\n                    type=\"text\"\n                    placeholder=\"URL of the Image\"\n                    defaultValue={i.profile_pic}\n                    onChange={\n                      (e) =>\n                      (\n\n                        document.querySelector('.edit-profile-img').setAttribute('src', e.target.value)\n                      )\n                    }\n                  />\n                  <br /> <br />\n                  <h5>Preview</h5>\n                  <hr />\n                  <div className=\"text-center\">\n                    <img\n                      src={i.profile_pic}\n                      className=\"edit-profile-img\"\n                      alt=\"\"\n                    />\n                  </div>\n                  <div className=\"login-username-error\">\n                    <i className=\"fas fa-exclamation-circle\"></i>\n                  </div>\n                </div>\n              ))}\n\n              <br />\n\n              <button\n                onClick={saveimg}\n                id=\"savebtn\"\n                className=\"btn2 w-100 mb-2\"\n              >\n                Yadda saxla\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"img-editbg\" onClick={profile_img}></div>\n    </main>\n  );\n}\nexport default Profile;\n","C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\pages\\Index.js",["137","138"],[],"import PostCard from \"../components/PostCard\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport LoadingPostCard from \"../components/LoadingPostCard\";\nimport PostCard2 from \"../components/PostCard2\";\nimport LoadingPostCard2 from \"../components/LoadingPostCard2\";\nimport AdminActions from \"../components/AdminActions\";\nimport { Link, NavLink } from \"react-router-dom\";\n\n\n\nfunction Index(props) {\n  const [loading, setLoading] = useState(false);\n  const [posts, setPost] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n\n      setLoading(true);\n      await fetch(\"http://localhost:8000/api/post_list/\")       \n        .then((res) => res.json())\n        .then((data) => setPost(data));\n        setTimeout(() =>{setLoading(false)},400)\n    };\n    fetchData();\n\n  }, [setPost]);\n\n  return (\n    <>\n      <main>\n        <div className=\"container\" style={{ marginTop: \"6rem\" }}>\n          <p className=\"sectoin-title\">Ən populyar məqalələr</p>\n          <div className=\"col-md-12\">\n            <div className=\"row\">\n              <div className=\"col-md-12 col-sm-12 col-lg-12\">\n                <div className=\"left-side\">\n                  <div className=\"row\">\n                    {loading ? (\n                      <>\n                        <div className=\"col-md-12 col-lg-6\">\n                          <LoadingPostCard2 />\n                        </div>\n                        <div className=\"col-md-12 col-lg-6\">\n                          <LoadingPostCard2 />\n                        </div>\n\n\n                      </>\n                    ) : (\n                      posts.length !== 0 \n                      ?\n                      (\n                      posts\n                        .sort((a, b) => (a.likes.length < b.likes.length ? 1 : -1))\n                        .map((i) => (\n                          <div key={i.id} className=\"col-md-12 col-lg-6\">\n                            <PostCard2 post={i} />\n                          </div>\n                        ))\n                        .slice(0, 2)\n                      )\n                      :\n                      (\n                        <div className=\"warning-alert\">\n                          Məqalələr yoxdur.\n                        </div>\n                      )\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n\n          <p className=\"sectoin-title\">Son məqalələr</p>\n          <div className=\"col-md-12\">\n            <div className=\"row\">\n              <div className=\"col-md-12 col-sm-12 col-lg-12\">\n                <div className=\"left-side\">\n                  <div className=\"row\">\n                    {loading ? (\n                      <>\n                        <div className=\"col-md-4\">\n                          <LoadingPostCard />\n                        </div>\n                        <div className=\"col-md-4\">\n                          <LoadingPostCard />\n                        </div>\n                        <div className=\"col-md-4\">\n                          <LoadingPostCard />\n                        </div>\n\n                      </>\n                    ) : (\n                      posts.length !== 0 \n                      ?\n                      (\n                      posts\n                        .sort((a, b) => (a.id < b.id ? 1 : -1))\n                        .map((i) => (\n                          <div key={i.id} className=\"col-md-4\">\n                            <PostCard post={i} />\n                          </div>\n                        ))\n                        .slice(0, 6)\n                      )\n                      :\n                      (\n                        <div className=\"warning-alert\">\n                          Məqalələr yoxdur.\n                        </div>\n                      )\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"allblogs\">\n            <span>\n            <NavLink to=\"/articles/\">\n                  Bütün Bloqlar\n            </NavLink>\n            </span>\n          </div>\n        {/* <AdminActions /> */}\n      </main>\n    </>\n  );\n}\nexport default Index;\n","C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\pages\\Article.js",["139","140","141"],[],"import { useParams } from \"react-router-dom\";\nimport RightSide from \"../components/RightSide\";\nimport Message from \"../components/Message\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport Cookies from \"js-cookie\";\nimport { useState, useEffect } from \"react\";\nimport LoadingArticle from \"../components/LoadingArticle\";\nimport AddComment from \"../components/AddComment\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Makale(props) {\n  const [loading, setLoading] = useState(false);\n  const [posts, setPost] = useState([]);\n  const [comments, setComment] = useState([]);\n  const [user, setUser] = useState([]);\n\n  const history = useHistory();\n\n  let articleid = 0;\n  let commentlength = 0;\n\n  const { url } = useParams();\n  const urlx = window.location.pathname.split(\"/\").pop();\n  useEffect(() => {\n    setLoading(true);\n\n\n    const fetchData1 = () => {\n      fetch(\"http://localhost:8000/api/post_list/\",{\n        method: \"GET\"\n      })\n        .then((res) => res.json())\n        .then(\n          (data) => (\n            setPost(data),\n            data.filter((i) => i.url === url).length !== 0\n              ? setPost(data.filter((i) => i.url === url))\n              : history.push(\"/404/\")\n          )\n        );\n        \n    };\n    const fetchData2 = () => {\n      fetch(\"http://localhost:8000/api/comment_list/\",{\n        method: \"GET\"\n      })\n        .then((res) => res.json())\n        .then((data) => setComment(data));\n    };\n    fetchData1();\n    fetchData2();\n    setTimeout(() => {\n      setLoading(false);\n    }, 500);\n    fetch(\"http://localhost:8000/api/user/\",{\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n      },\n    }).then((i) => i.json()).then((x) => setUser(x));\n  }, [urlx]);\n\n  function AddCommentz(e) {\n    fetch(\"http://localhost:8000/api/user/\", {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n      },\n    })\n      .then((i) => i.json())\n      .then((x) => setUser(x));\n    const postData = async () => {\n      fetch(\"http://localhost:8000/api/comment_list/\",{\n        method: \"GET\"\n      })\n        .then((res) => res.json())\n        .then((data) => setComment(data));\n      await fetch(\"http://localhost:8000/api/comment_list/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n        },\n        body: JSON.stringify({\n          text: String(e[\"text\"]),\n          post: parseInt(articleid),\n          user: parseInt(user[\"id\"]),\n          username: String(e[\"username\"]),\n        }),\n      });\n      fetch(\"http://localhost:8000/api/comment_list/\",{\n        method: \"GET\"\n      })\n        .then((res) => res.json())\n        .then((data) => setComment(data));\n    };\n    postData();\n  }\n  function likethearticle() {\n\n    const heart = document.querySelector(\".fa-heart\");\n    const likespan = document.querySelector(\"#likespan\");\n    if (user[\"id\"]) {\n      if (heart.classList.contains(\"liked\")) {\n        heart.classList.remove(\"liked\");\n        likespan.innerHTML = parseInt(likespan.innerHTML) - 1;\n\n        fetch(\"http://localhost:8000/api/remove_like_post/\", {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n          },\n          body: JSON.stringify({\n            articleid: posts[0].id,\n            userid: user[\"id\"],\n          }),\n        });\n      } else {\n        heart.classList.add(\"liked\");\n        likespan.innerHTML = parseInt(likespan.innerHTML) + 1;\n\n        fetch(\"http://localhost:8000/api/like_post/\", {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n          },\n          body: JSON.stringify({\n            articleid: posts[0].id,\n            userid: user[\"id\"],\n          }),\n        });\n      }\n    } else {\n      document\n        .querySelector(\".bottom-alert\")\n        .classList.toggle(\"open-bottom-alert\");\n      document.querySelector(\".bottom-alert\").classList.remove(\"success\");\n      document.querySelector(\".bottom-alert\").classList.add(\"warning\");\n\n      document.querySelector(\"#bottom-alert-text\").innerHTML =\n        \"You have to sign in to like the article\";\n      setTimeout(() => {\n        document\n          .querySelector(\".bottom-alert\")\n          .classList.toggle(\"open-bottom-alert\");\n      }, 2000);\n    }\n  }\n  function openmessageside() {\n    const messageside = document.querySelector(\"#messages-side\");\n    const messagesidebg = document.querySelector(\"#messages-side-bg\");\n\n    messageside.classList.toggle(\"open\");\n    messagesidebg.classList.toggle(\"d-block\");\n  }\n  function offmessages() {\n    const messageside = document.querySelector(\"#messages-side\");\n    const messagesidebg = document.querySelector(\"#messages-side-bg\");\n\n    messageside.classList.toggle(\"open\");\n    messagesidebg.classList.toggle(\"d-block\");\n  }\n  return (\n    <main>\n      <div className=\"container\" style={{ marginTop: \"6rem\" }}>\n        <div className=\"col-md-12\">\n          <div className=\"row\">\n            <div className=\"mb-4 col-lg-8\">\n              {loading ? (\n                <LoadingArticle />\n              ) : (\n                posts\n                  .filter((i) => i.url === url)\n                  .map((i) => (\n                    <article key={i.id}>\n                      <>\n                        <img\n                          alt={i.title}\n                          src={`http://localhost:8000${i.img}`}\n                          className=\"article-img\"\n                        />\n                        <p style={{ display: \"none\" }}>{(articleid = i.id)}</p>\n                        <div className=\"article-text\">\n                          <div className=\"text-center\">\n                           \n                            <h1>{i.title}</h1>\n\n                            <span className=\"span sharedate\">\n                               {i.created_date}  \n\n                            </span>\n\n                          </div>\n                          <div className=\"articledesc\">\n                            {ReactHtmlParser(i.description)}\n                          </div>\n\n                          <br></br>\n                          <span className=\"likeclass\"\n                            style={{ cursor: \"pointer\", display: \"\" }}\n                            onClick={likethearticle}\n                          >\n                            <span id=\"likespan\">{i.likes.length}</span>\n                            <i\n                              className={`fas fa-heart ${\n                                i.likes.filter((i) => i === user.id) !== \"\"\n                                  ? \"liked\"\n                                  : \"\"\n                              }`}\n                            ></i>{\" \"}\n                          </span>\n                          <div\n                            style={{\n                              position: \"absolute\",\n                              bottom: \"0\",\n                              width: \"100%\",\n                            }}\n                          ></div>\n                          <span className=\"commentclass\" onClick={openmessageside}>\n                            <span\n                              id=\"commentspan\"\n                              style={{\n                                marginLeft: \"1.5rem\",\n                                cursor: \"pointer\",\n                                display: \"\"\n                              }}\n                            >\n                              {\n                                comments.filter((e) => e.post === articleid)\n                                  .length\n                              }\n                            </span>\n                            <i className=\"fas fa-comments\"></i>\n                          </span>\n                        </div>\n                      </>\n                    </article>\n                  ))\n              )}\n            </div>\n            <div className=\"col-lg-4\">\n              <RightSide categories={props.categories} />\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <img className=\"heart-gif\" alt=\"\"></img>\n      <div id=\"messages-side-bg\" onClick={openmessageside}></div>\n      <div id=\"messages-side\">\n        <div style={{ position: \"relative\" }}>\n          {posts.map((i) => (\n            <>\n              <div id=\"article-message\">\n                <div style={{ display: \"flex\" }}>\n                  <img alt = \"\" src={`http://localhost:8000${i.img}`}/>\n                  <p>{i.title}</p>\n                </div>\n              </div>\n              <hr />\n              <div\n                className=\"p-2 message-side-messages\"\n                style={{ height: \"500px\", overflowY: \"scroll\" }}\n              >\n                {comments.filter((i) => i.post === articleid).length !== 0 ? (\n                  comments\n                    .sort((a, b) => (a.id < b.id ? 1 : -1))\n                    .filter((i) => i.post === articleid)\n                    .map(\n                      (i) => (\n                        (commentlength = commentlength + 1),\n                        (\n                          <Message\n                            key={i.id}\n                            date={i.created_date}\n                            user={i.user}\n                            username={i.username}\n                            text={i.text}\n                          />\n                        )\n                      )\n                    )\n                ) : (\n                  <div id=\"comments-alert\">\n                    <span>Şərh yoxdur</span>\n                  </div>\n                )}\n              </div>\n              <AddComment AddComment={AddCommentz} id={articleid} />\n            </>\n          ))}\n          <i class=\"fas fa-times delete\" onClick={offmessages}></i>\n        </div>\n      </div>\n      \n    </main>\n    \n  );\n}\nexport default Makale;\n","C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\components\\Navbar.js",["142","143","144"],[],"C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\components\\ToTop.js",[],[],"C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\components\\Footer.js",[],[],"C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\components\\LoadingPostCard.js",[],[],"C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\components\\PostCard.js",["145","146","147"],[],"import ReactHtmlParser from \"react-html-parser\";\nimport { Link } from \"react-router-dom\";\nfunction PostCard(props) {\n      const getDescription = () => {\n          if (props.post && props.post.description) {\n              const truncatedDescription =\n                  props.post.description.length > 200\n                      ? `${props.post.description.slice(0, 200)}...`\n                      : props.post.description;\n              return {__html: truncatedDescription};\n          }\n          return {__html: \"\"};\n      };\n  return (\n    <Link\n      to={`/article/${props.post.url}`}\n      style={{ textDecoration: \"none\", color: \"#fff\" }}\n    >\n      <div className=\"cart\" key={props.post.id}>\n        <img alt={props.post.title} src={`http://localhost:8000${props.post.img}`} className=\"cart-img\" />\n        <div className=\"cartbg\"></div>\n        <div className=\"cart-text\">\n            <h2 style={{ color: \"#fff\", fontSize: \"28px\" }}>\n              {props.post.title.length > 50\n                ? `${props.post.title.slice(0, 50)}...`\n                : props.post.title}\n            </h2>\n\n            {/* <div className=\"post-card\">\n              <div className=\"description\" style={{ color: \"black\", fontSize: \"16px\" }}>\n                <div dangerouslySetInnerHTML={getDescription()} />\n              </div>\n            </div> */}\n\n          <div style={{position:'relative'}}>\n            <img src=\"https://ik.imagekit.io/7wk7frhpr/vdfv.jpg?updatedAt=1696854402195\" className=\"postcard-profile\" />\n            <div className=\"username-date\">\n              <span className=\"cart-user\">Mr Omar</span>\n\n              <p className=\"cart-date\">\n                {props.post.created_date}      \n\n\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Link>\n  );\n}\nexport default PostCard;\n","C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\components\\RightSide.js",[],[],"C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\components\\LoadingComment.js",["148","149","150"],[],"import { useEffect, useState } from \"react\";\nfunction LoadingComment(props) {\n\n  return (\n    <div className=\"loading-message mt-3\">\n      <div className=\"row\">\n        <div className=\"loading-message-real-img\"></div>\n        <div className=\"loading-message-text\">\n          <h2></h2>\n          <span className=\"loading-message-date\"></span>\n          <p></p>\n        </div>\n      </div>\n\n    </div>\n  );\n}\nexport default LoadingComment;\n","C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\components\\LoadingProfile.js",[],[],"C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\components\\Message.js",["151"],[],"import { useEffect, useState } from \"react\";\nfunction Message(props) {\n  const [profile, setProfile] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:8000/api/profile_list/`)\n      .then((res) => res.json())\n      .then((data) => setProfile(data.filter((i) => i.user === props.user)));\n  }, [props]);\n  function messageimg(e) {\n    e.target.src = \"https://i.ibb.co/J3cGYxy/default-user-image.png\";\n\n  }\n  return (\n    <>\n      {profile.map((i) => (\n        <div key={i.id} className={`message mt-3`} id={`message${props.id}`}>\n          <div className=\"row\">\n            <img\n              className=\"message-real-img\"\n              onError={(e) => (messageimg(e))}\n              src={`${i[\"profile_pic\"]}`}\n            />\n            <div className=\"message-text\">\n              <h2>\n                {props.username} <span className=\"message-date\"> {props.date}</span>\n              </h2>\n              <p>{props.text}</p>\n            </div>\n          </div>\n        </div>\n      ))}\n    </>\n  );\n}\nexport default Message;\n","C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\components\\PostCard2.js",["152","153"],[],"import { Link } from \"react-router-dom\";\n\nfunction PostCard2(props) {\n  return (\n   <Link  to={`/article/${props.post.url}`}\n   style={{ textDecoration: \"none\", color: \"#fff\" }}>\n    <div className=\"post-card2\">\n      <div style={{ display: \"flex\" }}>\n        <img id=\"post-card2-img\" src={`http://localhost:8000${props.post.img}`} />\n        <div className=\"p-3 homecard2\">\n          <h2 style={{ color: \"#000\" }}>\n            {props.post.title.length > 40\n              ? props.post.title.substring(0, 40) + \"...\"\n              : props.post.title}\n          </h2>\n\n          <div className=\"mt-3\" style={{position:'relative'}}>\n            <img src=\"https://ik.imagekit.io/7wk7frhpr/vdfv.jpg?updatedAt=1696854402195\" className=\"postcard-profile\" />\n            <div className=\"username-date\">\n              <span className=\"cart-user\">Mr Omar</span>\n           \n              <p className=\"cart-date\">\n                {props.post.created_date}   \n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n   </Link>\n  );\n}\nexport default PostCard2;\n","C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\components\\LoadingPostCard2.js",[],[],"C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\components\\LoadingArticle.js",["154","155","156"],[],"function LoadingArticle() {\n  return (\n    <>\n      <article className=\"loading-article mb-4\">\n        <div className=\"loading-article-img\"></div>\n        <div className=\"article-text\">\n          <p></p>\n          <div className=\"texts mb-3\"></div>\n          <div className=\"date\"></div>\n          <div className=\"texts\"></div>\n        </div>\n      </article>\n      <div className=\"loading-message mt-3\">\n        <div className=\"row\">\n          <div className=\"loading-message-real-img\"></div>\n          <div className=\"loading-message-text\">\n            <h2></h2>\n\n            <p></p>\n          </div>\n        </div>\n      </div>\n      <div className=\"loading-message mt-3\">\n        <div className=\"row\">\n          <div className=\"loading-message-real-img\"></div>\n          <div className=\"loading-message-text\">\n            <h2></h2>\n\n            <p></p>\n          </div>\n        </div>\n      </div>\n      <div className=\"loading-message mt-3\">\n        <div className=\"row\">\n          <div className=\"loading-message-real-img\"></div>\n          <div className=\"loading-message-text\">\n            <h2></h2>\n            <p></p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\nexport default LoadingArticle;\n","C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\components\\AddComment.js",[],[],"C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\components\\LoginRegister.js",["157","158","159","160","161","162","163","164","165","166","167","168","169","170"],[],"import { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport Cookies from \"js-cookie\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Login() {\n  const [loginUsername, setloginUsername] = useState(\"\");\n  const [loginPassword, setloginPassword] = useState(\"\");\n\n  const [registerUsername, setregisterUsername] = useState(\"\");\n  const [registerPassword, setregisterPassword] = useState(\"\");\n  const [registerConfirmPassword, setregisterConfirmPassword] = useState(\"\");\n  const history = useHistory();\n\n  function loginbtn() {\n    document.querySelector(\".login-btn\").style.backgroundColor = \"white\";\n    document.querySelector(\".register-btn\").style.backgroundColor = \"#f1f1f1\";\n\n    document.querySelector(\"#login\").style.display = \"block\";\n    document.querySelector(\"#register\").style.display = \"none\";\n    document.querySelector(\"#register\").classList.remove(\"scaled\");\n\n    setTimeout(() => {\n      document.querySelector(\"#login\").classList.add(\"scaled\");\n    }, 50);\n  }\n  function signupbtn() {\n    document.querySelector(\".register-btn\").style.backgroundColor = \"white\";\n    document.querySelector(\".login-btn\").style.backgroundColor = \"#f1f1f1\";\n\n    document.querySelector(\"#login\").style.display = \"none\";\n    document.querySelector(\"#register\").style.display = \"block\";\n\n    document.querySelector(\"#login\").classList.remove(\"scaled\");\n\n    setTimeout(() => {\n      document.querySelector(\"#register\").classList.add(\"scaled\");\n    }, 50);\n  }\n  function login() {\n    const loginregisterbg = document.querySelector(\".login-registerbg\");\n    const login = document.querySelector(\".login-register\");\n    const loginerror = document.querySelector(\".login-error\");\n    const loginerrortext = document.querySelector(\".login-error-text\");\n    const loginbtn = document.querySelector(\"#loginbtn\");\n    const loginusernameinput = document.querySelector(\".login-username-input\");\n    const loginpasswordinput = document.querySelector(\".login-password-input\");\n    const loginusernameerror = document.querySelector(\".login-username-error\");\n    const loginpassworderror = document.querySelector(\".login-password-error\");\n\n    if (loginUsername == \"\") {\n      loginusernameinput.classList.add(\"error\");\n      loginusernameerror.classList.add(\"d-active\");\n    } else {\n      loginusernameinput.classList.remove(\"error\");\n      loginusernameerror.classList.remove(\"d-active\");\n    }\n    if (loginPassword == \"\") {\n      loginpassworderror.classList.add(\"d-active\");\n\n      loginpasswordinput.classList.add(\"error\");\n    } else {\n      loginpasswordinput.classList.remove(\"error\");\n      loginpassworderror.classList.remove(\"d-active\");\n    }\n    if (loginUsername != \"\" && loginPassword != \"\") {\n      const fetchData = async () => {\n        loginbtn.innerHTML =\n          \"<div class='lds-ellipsis'><div></div><div></div><div></div><div></div></div></button>\";\n        loginbtn.disabled = true;\n        fetch(\"http://localhost:8000/api/token/\", {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            'X-CSRFToken': Cookies.get('csrftoken')\n          },\n          body: JSON.stringify({\n            username: loginUsername,\n            password: loginPassword,\n          }),\n        })\n          .then(\n            setTimeout(() => {\n              loginbtn.innerHTML = \"Login\";\n              loginbtn.disabled = false;\n            }, 1000)\n          )\n          .then((i) => i.json())\n          .then((data) =>\n            data[\"detail\"] || data[\"username\"]\n              ? data[\"detail\"]\n                ? setTimeout(() => {\n                    loginerror.classList.remove(\"scaled\");\n                    loginerror.classList.add(\"d-active\");\n                    loginerrortext.innerHTML =\n                      \"İstifadəçi adı və ya parol səhvdir.\";\n                    setTimeout(() => {\n                      loginerror.classList.add(\"scaled\");\n                    }, 50);\n                  }, 1000)\n                : \"\"\n              : setTimeout(() => {\n                  loginerror.classList.remove(\"d-active\");\n                  loginpasswordinput.value = \"\";\n                  loginusernameinput.value = \"\";\n                  setloginUsername(\"\");\n                  setloginPassword(\"\");\n                  localStorage.setItem(\"token\", data[\"access\"]);\n                  loginregisterbg.classList.toggle(\"d-active\");\n                  login.classList.toggle(\"d-active\");\n                  setTimeout(() => {\n                    document\n                      .querySelector(\".login-register-form\")\n                      .classList.toggle(\"scaled\");\n                  }, 10);\n                  document\n                    .querySelector(\".bottom-alert\")\n                    .classList.toggle(\"open-bottom-alert\");\n                  document\n                    .querySelector(\".bottom-alert\")\n                    .classList.add(\"success\");\n                  document\n                    .querySelector(\".bottom-alert\")\n                    .classList.remove(\"warning\");\n                  document.querySelector(\"#bottom-alert-text\").innerHTML =\n                    \"Siz uğurla daxil oldunuz\";\n                  setTimeout(() => {\n                    document\n                      .querySelector(\".bottom-alert\")\n                      .classList.toggle(\"open-bottom-alert\");\n                  }, 2000);\n                  history.push(\"/profile/ \");\n                }, 1000)\n          );\n      };\n      fetchData();\n    }\n  }\n\n  function register() {\n    const registererror = document.querySelector(\".register-error\");\n    const registersuccess = document.querySelector(\".register-success\");\n    const registerbtn = document.querySelector(\"#registerbtn\");\n\n    const registererrortext = document.querySelector(\".register-error-text\");\n    const registersuccesstext = document.querySelector(\n      \".register-success-text\"\n    );\n\n    const registerusernameerror = document.querySelector(\n      \".register-username-error\"\n    );\n    const registerpassworderror = document.querySelector(\n      \".register-password-error\"\n    );\n    const registerconfirmpassworderror = document.querySelector(\n      \".register-confirmpassword-error\"\n    );\n\n    const usernameinput = document.querySelector(\"#username\");\n    const passwordinput = document.querySelector(\"#password\");\n    const confirmpasswordinput = document.querySelector(\"#confirmpassword\");\n\n    if (registerUsername == \"\") {\n      usernameinput.classList.add(\"error\");\n      registerusernameerror.classList.add(\"d-active\");\n    } else {\n      usernameinput.classList.remove(\"error\");\n      registerusernameerror.classList.remove(\"d-active\");\n    }\n    if (registerPassword == \"\") {\n      registerpassworderror.classList.add(\"d-active\");\n\n      passwordinput.classList.add(\"error\");\n    } else {\n      passwordinput.classList.remove(\"error\");\n      registerpassworderror.classList.remove(\"d-active\");\n    }\n    if (registerConfirmPassword == \"\") {\n      registerconfirmpassworderror.classList.add(\"d-active\");\n\n      confirmpasswordinput.classList.add(\"error\");\n    } else {\n      confirmpasswordinput.classList.remove(\"error\");\n      registerconfirmpassworderror.classList.remove(\"d-active\");\n    }\n\n    if (registerUsername && registerUsername.length < 4) {\n      registersuccess.classList.remove(\"d-active\");\n      registersuccess.classList.remove(\"scaled\");\n      registererror.classList.remove(\"d-active\");\n      registererror.classList.remove(\"scaled\");\n      registererror.classList.add(\"d-active\");\n      registererrortext.innerHTML = \"İstifadəçi adının uzunluğu 4-dən çox olmalıdır\";\n      setTimeout(() => {\n        registererror.classList.add(\"scaled\");\n      }, 100);\n    } else if (registerUsername && registerUsername.length > 24) {\n      registersuccess.classList.remove(\"d-active\");\n      registersuccess.classList.remove(\"scaled\");\n      registererror.classList.remove(\"d-active\");\n      registererror.classList.remove(\"scaled\");\n      registererror.classList.add(\"d-active\");\n      registererrortext.innerHTML = \"İstifadəçi adı uzunluğu 24-dən az olmalıdır\";\n      setTimeout(() => {\n        registererror.classList.add(\"scaled\");\n      }, 100);\n    } else if (registerPassword && registerPassword.length < 6) {\n      registersuccess.classList.remove(\"d-active\");\n      registersuccess.classList.remove(\"scaled\");\n      registererror.classList.remove(\"d-active\");\n      registererror.classList.remove(\"scaled\");\n\n      registererror.classList.add(\"d-active\");\n\n      registererrortext.innerHTML = \"Şifrə uzunluğu 6-dan çox olmalıdır\";\n      setTimeout(() => {\n        registererror.classList.add(\"scaled\");\n      }, 100);\n    } else if (registerPassword && registerPassword.length > 32) {\n      registersuccess.classList.remove(\"d-active\");\n      registersuccess.classList.remove(\"scaled\");\n      registererror.classList.remove(\"d-active\");\n      registererror.classList.remove(\"scaled\");\n\n      registererror.classList.add(\"d-active\");\n\n      registererrortext.innerHTML = \"Parolun uzunluğu 32-dən az olmalıdır\";\n      setTimeout(() => {\n        registererror.classList.add(\"scaled\");\n      }, 100);\n    }\n    else if (registerPassword != registerConfirmPassword) {\n      registersuccess.classList.remove(\"d-active\");\n      registersuccess.classList.remove(\"scaled\");\n      registererror.classList.remove(\"d-active\");\n      registererror.classList.remove(\"scaled\");\n\n      registererror.classList.add(\"d-active\");\n\n      registererrortext.innerHTML = \"Parollar eyni deyil\";\n      setTimeout(() => {\n        registererror.classList.add(\"scaled\");\n      }, 100);\n    } \n    if ( registerUsername != \"\" \n    && registerPassword != \"\" \n    && registerConfirmPassword != \"\" \n    && registerPassword == registerConfirmPassword\n    && registerUsername.length > 4\n    && registerPassword.length > 6\n    && registerPassword.length < 32\n    && registerUsername.length < 24\n    )\n    {\n      registerbtn.innerHTML =\n      \"<div class='lds-ellipsis'><div></div><div></div><div></div><div></div></div></button>\";\n      registerbtn.disabled = true;\n      fetch(\"http://localhost:8000/api/register/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          'X-CSRFToken': Cookies.get('csrftoken'),\n\n          \n        },\n        body: JSON.stringify({\n          username: registerUsername,\n          password: registerPassword,\n          repassword: registerConfirmPassword,\n        }),\n      })\n      .then(\n        setTimeout(() => {\n          registerbtn.innerHTML = \"Register\";\n          registerbtn.disabled = false;\n        }, 1000)\n      )\n        .then((i) => i.json())\n        .then((data) =>\n          data[\"username\"] != registerUsername\n            ? setTimeout(() => {\n              registersuccess.classList.remove(\"d-active\")\n              registersuccess.classList.remove(\"scaled\")\n              registererror.classList.remove(\"d-active\")\n              registererror.classList.remove(\"scaled\")\n              registererror.classList.add(\"d-active\")\n              registererrortext.innerHTML = data[\"username\"]\n              setTimeout(() => {\n                registererror.classList.add(\"scaled\")\n              }, 100)\n            },1000)\n            : setTimeout(() => {\n              usernameinput.value = \"\"\n              passwordinput.value = \"\"\n              confirmpasswordinput.value = \"\"\n              setregisterConfirmPassword(\"\")\n              setregisterPassword(\"\")\n              setregisterUsername(\"\")\n              registererror.classList.remove(\"d-active\")\n              registererror.classList.remove(\"scaled\")\n              registersuccess.classList.remove(\"d-active\")\n              registersuccess.classList.remove(\"scaled\")\n              registersuccess.classList.add(\"d-active\")\n              registersuccesstext.innerHTML = \"Siz uğurla qeydiyyatdan keçdiniz\"\n              setTimeout(() => {\n                registersuccess.classList.remove(\"d-active\");\n              }, 5000)\n              setTimeout(() => {\n                registersuccess.classList.add(\"scaled\");\n              }, 100)\n            },1000)\n        );\n    }\n    \n  }\n  function registerDown(e) {\n    if (e.key === 'Enter') {\n      register()\n    }\n  }\n  function loginDown(e) {\n    if (e.key === 'Enter') {\n      login()\n    }\n  }\n  return (\n    <div className=\"login-register\">\n      <div className=\"container\">\n        <div className=\"login-register-form\">\n          <div className=\"login-register-side\">\n            <div className=\"row\">\n              <div className=\"col-6\">\n                <button className=\"login-btn w-100\" onClick={loginbtn}>\n                  Daxil Ol\n                </button>\n              </div>\n              <div className=\"col-6\">\n                <button className=\"register-btn w-100\" onClick={signupbtn}>\n                  Qeyddiyyatdan Keç\n                </button>\n              </div>\n            </div>\n          </div>\n          <br />\n          <div id=\"login\" className=\"scaled\">\n            <div className=\"alertz danger login-error\">\n              <p className=\"login-error-text\">hi</p>\n            </div>\n            <div style={{ position: \"relative\" }}>\n              <input\n                className=\"input login-username-input\"\n                onChange={(e) => setloginUsername(e.target.value)}\n                type=\"text\"\n                placeholder=\"İstifadəçi adı\"\n                onKeyDown={loginDown}\n              />\n              <div className=\"login-username-error\">\n                <i class=\"fas fa-exclamation-circle\"></i>\n              </div>\n            </div>\n            <br />\n            <div style={{ position: \"relative\" }}>\n              <input\n                onChange={(e) => setloginPassword(e.target.value)}\n                className=\"input login-password-input input-password\"\n                type=\"password\"\n                placeholder=\"Şifrə\"\n                onKeyDown={loginDown}\n              />\n              <div className=\"login-password-error\">\n                <i class=\"fas fa-exclamation-circle\"></i>\n              </div>\n            </div>\n            <br />\n            <button onClick={login} id=\"loginbtn\" className=\"btn2 w-100 mb-2\">\n              Login\n            </button>\n          </div>\n          <div id=\"register\">\n            <div className=\"alertz danger register-error\">\n              <p className=\"register-error-text\">hi</p>\n            </div>\n            <div className=\"alertz success register-success\">\n              <p className=\"register-success-text\">hi</p>\n            </div>\n            <div style={{ position: \"relative\" }}>\n              <input\n                id=\"username\"\n                onChange={(e) => setregisterUsername(e.target.value)}\n                className=\"input\"\n                type=\"text\"\n                onKeyDown={registerDown}\n                placeholder=\"İstifadəçi adı\"\n              />\n              <div className=\"register-username-error\">\n                <i class=\"fas fa-exclamation-circle\"></i>\n              </div>\n            </div>\n            <br />\n            <div style={{ position: \"relative\" }}>\n              <input\n                className=\"input input-password\"\n                type=\"password\"\n                placeholder=\"Şifrə\"\n                id=\"password\"\n                onKeyDown={registerDown}\n                onChange={(e) => setregisterPassword(e.target.value)}\n              />\n              <div className=\"register-password-error\">\n                <i class=\"fas fa-exclamation-circle\"></i>\n              </div>\n            </div>\n            <br />\n            <div style={{ position: \"relative\" }}>\n              <input\n                className=\"input input-password\"\n                type=\"password\"\n                placeholder=\"Şifrəni təsdiqləyin\"\n                id=\"confirmpassword\"\n                onKeyDown={registerDown}\n                onChange={(e) => setregisterConfirmPassword(e.target.value)}\n              />\n              <div className=\"register-confirmpassword-error\">\n                <i class=\"fas fa-exclamation-circle\"></i>\n              </div>\n            </div>\n            <br />\n            <button onClick={register} id=\"registerbtn\" className=\"btn2 w-100 mb-2\">\n              Qeydiyyatdan keçin\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Login;\n","C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\components\\AdminActions.js",[],[],"C:\\Users\\Omar\\Desktop\\Bloggy-master\\frontend\\src\\components\\DarkMode.js",[],[],{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":27,"column":6,"nodeType":"175","endLine":27,"endColumn":15,"suggestions":"176"},{"ruleId":"177","severity":1,"message":"178","line":31,"column":57,"nodeType":"179","messageId":"180","endLine":31,"endColumn":58},{"ruleId":"173","severity":1,"message":"181","line":58,"column":6,"nodeType":"175","endLine":58,"endColumn":16,"suggestions":"182"},{"ruleId":"183","severity":1,"message":"184","line":7,"column":8,"nodeType":"185","messageId":"186","endLine":7,"endColumn":20},{"ruleId":"183","severity":1,"message":"187","line":8,"column":10,"nodeType":"185","messageId":"186","endLine":8,"endColumn":14},{"ruleId":"177","severity":1,"message":"178","line":35,"column":26,"nodeType":"179","messageId":"180","endLine":35,"endColumn":27},{"ruleId":"173","severity":1,"message":"188","line":61,"column":6,"nodeType":"175","endLine":61,"endColumn":12,"suggestions":"189"},{"ruleId":"177","severity":1,"message":"178","line":276,"column":60,"nodeType":"179","messageId":"180","endLine":276,"endColumn":61},{"ruleId":"177","severity":1,"message":"178","line":32,"column":24,"nodeType":"179","messageId":"180","endLine":32,"endColumn":25},{"ruleId":"190","severity":1,"message":"191","line":179,"column":25,"nodeType":"192","endLine":188,"endColumn":27},{"ruleId":"193","severity":1,"message":"194","line":283,"column":30,"nodeType":"195","messageId":"196","endLine":283,"endColumn":32},{"ruleId":"183","severity":1,"message":"197","line":1,"column":8,"nodeType":"185","messageId":"186","endLine":1,"endColumn":23},{"ruleId":"183","severity":1,"message":"198","line":4,"column":13,"nodeType":"185","messageId":"186","endLine":4,"endColumn":27},{"ruleId":"190","severity":1,"message":"191","line":36,"column":13,"nodeType":"192","endLine":36,"endColumn":121},{"ruleId":"183","severity":1,"message":"199","line":1,"column":10,"nodeType":"185","messageId":"186","endLine":1,"endColumn":19},{"ruleId":"183","severity":1,"message":"200","line":1,"column":21,"nodeType":"185","messageId":"186","endLine":1,"endColumn":29},{"ruleId":"201","severity":1,"message":"202","line":9,"column":11,"nodeType":"192","endLine":9,"endColumn":15},{"ruleId":"190","severity":1,"message":"191","line":18,"column":13,"nodeType":"192","endLine":22,"endColumn":15},{"ruleId":"190","severity":1,"message":"191","line":9,"column":9,"nodeType":"192","endLine":9,"endColumn":83},{"ruleId":"190","severity":1,"message":"191","line":18,"column":13,"nodeType":"192","endLine":18,"endColumn":121},{"ruleId":"201","severity":1,"message":"202","line":17,"column":13,"nodeType":"192","endLine":17,"endColumn":17},{"ruleId":"201","severity":1,"message":"202","line":27,"column":13,"nodeType":"192","endLine":27,"endColumn":17},{"ruleId":"201","severity":1,"message":"202","line":37,"column":13,"nodeType":"192","endLine":37,"endColumn":17},{"ruleId":"183","severity":1,"message":"187","line":1,"column":10,"nodeType":"185","messageId":"186","endLine":1,"endColumn":14},{"ruleId":"193","severity":1,"message":"194","line":51,"column":23,"nodeType":"195","messageId":"196","endLine":51,"endColumn":25},{"ruleId":"193","severity":1,"message":"194","line":58,"column":23,"nodeType":"195","messageId":"196","endLine":58,"endColumn":25},{"ruleId":"193","severity":1,"message":"203","line":66,"column":23,"nodeType":"195","messageId":"196","endLine":66,"endColumn":25},{"ruleId":"193","severity":1,"message":"203","line":66,"column":46,"nodeType":"195","messageId":"196","endLine":66,"endColumn":48},{"ruleId":"193","severity":1,"message":"194","line":165,"column":26,"nodeType":"195","messageId":"196","endLine":165,"endColumn":28},{"ruleId":"193","severity":1,"message":"194","line":172,"column":26,"nodeType":"195","messageId":"196","endLine":172,"endColumn":28},{"ruleId":"193","severity":1,"message":"194","line":180,"column":33,"nodeType":"195","messageId":"196","endLine":180,"endColumn":35},{"ruleId":"193","severity":1,"message":"203","line":234,"column":31,"nodeType":"195","messageId":"196","endLine":234,"endColumn":33},{"ruleId":"193","severity":1,"message":"203","line":247,"column":27,"nodeType":"195","messageId":"196","endLine":247,"endColumn":29},{"ruleId":"193","severity":1,"message":"203","line":248,"column":25,"nodeType":"195","messageId":"196","endLine":248,"endColumn":27},{"ruleId":"193","severity":1,"message":"203","line":249,"column":32,"nodeType":"195","messageId":"196","endLine":249,"endColumn":34},{"ruleId":"193","severity":1,"message":"194","line":250,"column":25,"nodeType":"195","messageId":"196","endLine":250,"endColumn":27},{"ruleId":"193","severity":1,"message":"203","line":283,"column":28,"nodeType":"195","messageId":"196","endLine":283,"endColumn":30},"no-new-object",["204"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'x' and 'y'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setPost' needs the current value of 'y'.","ArrayExpression",["205"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["206"],"no-unused-vars","'AdminActions' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'url'. Either include them or remove the dependency array.",["207"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ReactHtmlParser' is defined but never used.","'getDescription' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","Expected '!==' and instead saw '!='.","no-object-constructor",{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},"Update the dependencies array to be: [setPost, x, y]",{"range":"214","text":"215"},"Update the dependencies array to be: [history, pathname]",{"range":"216","text":"217"},"Update the dependencies array to be: [history, url, urlx]",{"range":"218","text":"219"},[841,850],"[setPost, x, y]",[1922,1932],"[history, pathname]",[1768,1774],"[history, url, urlx]"]